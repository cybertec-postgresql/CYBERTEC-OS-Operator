<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CPO (CYBERTEC-PG-Operator) on CYBERTEC-PG-Operator</title>
    <link>http://localhost:1313/CYBERTEC-pg-operator/</link>
    <description>Recent content in CPO (CYBERTEC-PG-Operator) on CYBERTEC-PG-Operator</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 31 May 2024 14:26:51 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/CYBERTEC-pg-operator/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Project</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/project/project/</link>
      <pubDate>Mon, 11 Mar 2024 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/project/project/</guid>
      <description></description>
    </item>
    <item>
      <title>Container Images</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/project/project-copy/</link>
      <pubDate>Mon, 11 Mar 2024 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/project/project-copy/</guid>
      <description></description>
    </item>
    <item>
      <title>Architecture</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/architecture/architecture/</link>
      <pubDate>Tue, 07 Mar 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/architecture/architecture/</guid>
      <description>This chapter covers all important aspects relating to the architecture of CPO and the associated components. In addition to the underlying Kubertnetes, the various components and their interaction for the operation of a PostgreSQL cluster are analysed.&#xA;Brief overview of the components Network-Traffic PG-Cluster-intern Traffic With internal PG cluster-internal traffic, we are talking about all traffic that is necessary for the operation of the cluster itself. This includes&#xA;Communication for the sync of the replicas: pg_basebackup &amp;amp; streaming replication Communication with pgBackRest (if configured) Backups WAL archiving replica-create for new replicas The figure below shows the internal traffic flows with pgBackRest based on block storage (left) or cloud storage (right)</description>
    </item>
    <item>
      <title>PostgreSQL</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/documentation/crd/crd-postgresql/</link>
      <pubDate>Tue, 07 Mar 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/documentation/crd/crd-postgresql/</guid>
      <description>postgresql Name Type required Description apiVersion string true acid.zalando.do/v1 kind string true metadata object true spec object true status object false spec Name Type required Description backup object false Enables the definition of a customised backup solution for the cluster teamId string true name of the team the cluster belongs to numberOfInstances Int true Number of nodes of the cluster dockerImages string false Define a custom image to override the default schedulerName string false Define a custom Name to override the default spiloRunAsUser string false Define an User id which should be used for the pods spiloRunAsGroup string false Define an Group id which should be used for the pods spiloFSGroup string false Persistent Volumes for the pods in the StatefulSet will be owned and writable by the group ID specified.</description>
    </item>
    <item>
      <title>Operator-Configuration</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/documentation/crd/crd-operator-configurator/</link>
      <pubDate>Tue, 07 Mar 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/documentation/crd/crd-operator-configurator/</guid>
      <description>Name Type default Description enable_crd_registration boolean true crd_categories string all enable_lazy_spilo_upgrade boolean false enable_pgversion_env_var boolean true enable_spilo_wal_path_combat boolean false etcd_host string kubernetes_use_configmaps boolean false docker_image string sidecars list enable_shm_volume boolean true workers int 8 max_instances int -1 min_instances int -1 resync_period string 30m repair_period string 5m set_memory_request_to_limit boolean false debug_logging boolean true enable_db_access boolean true spilo_privileged boolean false spilo_allow_privilege_escalation boolean true watched_namespace string * major-upgrade-specific Name Type default Description major_version_upgrade_mode string off major_version_upgrade_team_allow_list string minimal_major_version string 9.</description>
    </item>
    <item>
      <title>Quickstart</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/quickstart/quickstart/</link>
      <pubDate>Tue, 07 Mar 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/quickstart/quickstart/</guid>
      <description>We can tell and document so much about our project but it seems you just want to get started. Let us show you the fastest way to use CPO.&#xA;Preconditions git helm (optional) kubectl or oc Let&amp;rsquo;s start Step 1 - Preparations To get started, you can fork our tutorial repository on Github and then download it. CYBERTEC-operator-tutorials&#xA;GITHUB_USER=&amp;#39;[YOUR_USERNAME]&amp;#39; git clone https://github.com/$GITHUB_USER/CYBERTEC-operator-tutorials.git cd CYBERTEC-operator-tutorials Step 2 - Install the Operator Two options are available for the installation:</description>
    </item>
    <item>
      <title>Setup local Kubernetes</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/installation/playground.md/</link>
      <pubDate>Tue, 07 Mar 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/installation/playground.md/</guid>
      <description></description>
    </item>
    <item>
      <title>Install CPO</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/installation/installation/</link>
      <pubDate>Tue, 07 Mar 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/installation/installation/</guid>
      <description>Prerequisites For the installation you either need our CPO tutorial repository or you install CPO directly from our registry. Exception: Installation via Operatorhub (Openshift only)&#xA;CPO-Tutorial-Repository To get started, you can fork our tutorial repository on Github and then download it. CYBERTEC-operator-tutorials&#xA;GITHUB_USER=&amp;#39;[YOUR_USERNAME]&amp;#39; git clone https://github.com/$GITHUB_USER/CYBERTEC-operator-tutorials.git cd CYBERTEC-operator-tutorials CPO-Registry Create Namespace # kubectl kubectl create namespace cpo # oc oc create namespace cpo Install CPO There are several ways to install CPO:</description>
    </item>
    <item>
      <title>Operator-Configuration</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/installation/configuration_operator/</link>
      <pubDate>Tue, 07 Mar 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/installation/configuration_operator/</guid>
      <description>Users who are already used to working with PostgreSQL from Baremetal or VMs are already familiar with the need for various files to configure PostgreSQL. These include&#xA;postgresql.conf pg_hba.conf &amp;hellip; Although these files are available in the container, direct modification is not planned. As part of the declarative mode of operation of the operator, these files are defined via the operator. The modifying intervention within the container also represents a contradiction to the immutability of the container.</description>
    </item>
    <item>
      <title>Databases &amp; Users</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/documentation/how-to-use/databases_roles/</link>
      <pubDate>Thu, 28 Dec 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/documentation/how-to-use/databases_roles/</guid>
      <description>CPO not only supports you in deploying your cluster, it also supports you in setting it up in terms of the database and users. CPO offers you three different options for this:&#xA;Create roles Create databases preapared databases Create Roles The creation of users is based on the definition of the user name and the definition of the required rights for this user. Available rights are&#xA;superuser inherit login nologin createrole createdb replication bypassrls Unless explicitly defined via NOLOGIN, a created user automatically receives the LOGIN permission.</description>
    </item>
    <item>
      <title>Modify Cluster</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/documentation/how-to-use/modify-cluster/</link>
      <pubDate>Thu, 28 Dec 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/documentation/how-to-use/modify-cluster/</guid>
      <description>Starting with the Single-Node-Cluster from the previous section, we want to modify the Instance a bit to see.&#xA;CPU and Memory spec: resources: limits: cpu: 1000m memory: 500Mi requests: cpu: 500m memory: 500mi Based on the ressources-Definiton we&amp;rsquo;re able to modify the reserved Hardware (requests) and the limits, which allows use to consume more than the reserved definitons if the k8s-worker has this hardware available. There are some Restrictions when modifiying the limits-section.</description>
    </item>
    <item>
      <title>High Availability Cluster (HA)</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/documentation/how-to-use/ha-cluster/</link>
      <pubDate>Thu, 28 Dec 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/documentation/how-to-use/ha-cluster/</guid>
      <description>To ensure continiues productive usage you can create a HA-Cluster or modify a Single-Node-Cluster to a HA-Cluster. The needed changes are less complicated&#xA;spec: numberOfInstances: 2 # or more The example above will create a HA-Cluster based on two Nodes.&#xA;kubectl get pods ----------------------------------------------------------------------------- NAME | READY | STATUS | RESTARTS | AGE cluster-1-0 | 1/1 | Running | 0 | 54s cluster-1-1 | 1/1 | Running | 0 | 31s </description>
    </item>
    <item>
      <title>PostgreSQL Configuration</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/documentation/how-to-use/configuration_cluster/</link>
      <pubDate>Tue, 07 Mar 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/documentation/how-to-use/configuration_cluster/</guid>
      <description>Users who are already used to working with PostgreSQL from Baremetal or VMs are already familiar with the need for various files to configure PostgreSQL. These include&#xA;postgresql.conf pg_hba.conf &amp;hellip; Although these files are available in the container, direct modification is not planned. As part of the declarative mode of operation of the operator, these files are defined via the operator. The modifying intervention within the container also represents a contradiction to the immutability of the container.</description>
    </item>
    <item>
      <title>Backup</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/documentation/how-to-use/backup/</link>
      <pubDate>Thu, 28 Dec 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/documentation/how-to-use/backup/</guid>
      <description>Backups are essential for databases. From broken storage to deployments gone wrong, backups often save the day. Starting with pg_dump, which was released in the late 1990s, to the archiving of WAL files (PostgreSQL 8.0 / 2005) and pg_basebackup (PostgreSQL 9.0 / 2010), PostgreSQL already offers built-in options for backups and restores based on logical and physical backups.&#xA;Backups with pgBackRest CPO relies on pgBackRest as its backup solution, a tried-and-tested tool with extensive backup and restore options.</description>
    </item>
    <item>
      <title>Restore</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/documentation/how-to-use/restore/</link>
      <pubDate>Thu, 28 Dec 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/documentation/how-to-use/restore/</guid>
      <description>Restore or recovery is the process of starting a PostgreSQL instance or a cluster based on a defined and existing backup. This can be just a Backup or a combination of a Backup and additional WAL files. The difference is that a Backup represents a fixed point in time, whereas the combination with WAL enables a point-in-time recovery(PITR).&#xA;You can find more information about backups here&#xA;Rescue my cluster CPO enables the restore based on an existing backup using pgBackRest.</description>
    </item>
    <item>
      <title>Monitoring</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/documentation/how-to-use/monitoring/</link>
      <pubDate>Thu, 28 Dec 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/documentation/how-to-use/monitoring/</guid>
      <description>The CPO-Project has prepared severall Tools which allows to setup a Monitoring-Stack including Alerting and Metric-Viewer. These Stack is based on:&#xA;Prometheus Alertmanager Grafana exporter-container CPO has prepared an own Exporter for the PostgreSQl-Pod which can used as a sidecar.&#xA;Setting up the Monitoring Stack To setup the Monitoring-Stack we suggest that you create an own namespace and use the prepared kustomization file inside the Operator-Tutorials.&#xA;$ kubectl create namespace cpo-monitoring namespace/cpo-monitoring created $ kubectl get pods -n cpo-monitoring No resources found in cpo-monitoring namespace.</description>
    </item>
    <item>
      <title>ConnectionPooler</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/documentation/how-to-use/connectionpooler/</link>
      <pubDate>Fri, 31 May 2024 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/documentation/how-to-use/connectionpooler/</guid>
      <description>A connection pooler is a tool that acts as a proxy between the application and the database and enables the performance of the application to be improved and the load on the database to be reduced. The reason for this lies in the connection handling of PostgreSQL.&#xA;How PostgreSQL handles connection PostgreSQL use a new Process for every database-connection created by the postmaster. This process is handling the connection. On the positive side, this enables a stable connection and isolation, but it is not particularly efficient for short-lived connections due to the effort required to create them.</description>
    </item>
    <item>
      <title>Major-Upgrade</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/documentation/how-to-use/major-upgrades/</link>
      <pubDate>Thu, 28 Dec 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/documentation/how-to-use/major-upgrades/</guid>
      <description>CPO enables the use of the in-place upgrade, which makes it possible to upgrade a cluster to a new PG major. For this purpose, pg_upgrade is used in the background.&#xA;PAY ATTENTION: Note that an in-place upgrade generates both a pod restore in the form of a rolling update and an operational interruption of the cluster during the actual execution of the restore.&#xA;How does the upgrade work? Preconditions: Pod restart - Use the rolling update strategy to replace all pods based on the new ENV PGVERSION with the version you want to update to.</description>
    </item>
    <item>
      <title>Release Notes</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/release_notes/release_notes/</link>
      <pubDate>Tue, 07 Mar 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/release_notes/release_notes/</guid>
      <description>0.7.0 Features Monitoring-Sidecar integrated via CRD Start with Monitoring Password-Hash per default set to scram-sha-256 pgBackRest with blockstorage using RepoHost Internal Certification-Management for RepoHost-Certificates Compatible with PG17Beta2 Changes API Change acid.zalan.do is replaced by cpo.opensource.cybertec.at - If you&amp;rsquo;re updating your Operator from previous Versions, please check this HowTo Migrate to new API Patroni-Compatibility has increased to Version 3.3.2 pgBackRest-Compatbility has increased to Version 2.52.1 Revision of the restore process Revision of the backup jobs Operator now using Rocky9 as Baseimage Updates Go-Package to 1.</description>
    </item>
  </channel>
</rss>
